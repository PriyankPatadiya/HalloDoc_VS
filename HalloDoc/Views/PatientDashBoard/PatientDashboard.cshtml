@model DAL.ViewModels.PatientDashboardVM
@{
    ViewData["Title"] = "Patient_Dashboard";
    Layout = "~/Views/Shared/LayoutPatDash.cshtml";
   
}


<body>
    <div class="w-100 shadow">
        <ul class="nav nav-underline ps-5" id="pills-tab" role="tablist">
            <li class="nav-item " role="presentation">
                <button class="px-2 nav-link text-decoration-none active text-black-50" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">Dashboard</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="px-2 nav-link text-decoration-none text-black-50" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</button>
            </li>
        
        </ul>
    </div>
        <div class="tab-content" id="pills-tabContent">
        
            <partial name="PatDashTable" model="Model.DashTable"/>
            <partial name="PatientProfile" model="Model.ProfilePatient"/>
        </div>

   
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script>
        if ('@TempData["Message"]' != '') {
            showToast('@TempData["Message"]', '@TempData["MessageType"]');
        }
        function showToast(message, messageType) {
            const Toast = Swal.mixin({
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer;
                    toast.onmouseleave = Swal.resumeTimer;
                }
            });

            let icon = "info";
            if (messageType === "success") {
                icon = "success";
            } else if (messageType === "error") {
                icon = "error";
            } else if (messageType === "warning") {
                icon = "warning";
            }

            Toast.fire({
                icon: icon,
                title: message
            });
        }

    </script>
    <script>
        $(document).ready(function () {
            $('#submitBtnforenable').click(function () {
                event.preventDefault();
                $('.inputss').removeAttr("disabled");
                $('.btn').css("display", "inline-block");
                $('#submitBtnforenable').css("display", "none");
            })
        })
        event.preventDefault();


    </script>

</body>
</html>

