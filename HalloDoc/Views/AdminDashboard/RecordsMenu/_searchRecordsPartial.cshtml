@model List<DAL.ViewModels.SearchRecordsVM>

@if (ViewBag.IsEmpty)
{
    <div class="d-flex fs-4 justify-content-center text-body">
        No Data Found !
    </div>
}
else
{
    <Table class="table mb-0">

        <tbody class="table-body">
            <tr>
                <th scope="col">Patient Name</th>
                <th scope="col">Requestor</th>
                <th scope="col">Date Of Service</th>
                <th scope="col">Close Case Date</th>
                <th scope="col">Email</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Address</th>
                <th scope="col">Zip</th>
                <th scope="col">RequestStatus</th>
                <th scope="col">Physician</th>
                <th scope="col">Physician Note</th>
                <th scope="col">Cancelled By Provider Name</th>
                <th scope="col">Admin Note</th>
                <th scope="col">Patient Note</th>
                <th scope="col">Delete Permanently</th>
            </tr>
        </tbody>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>

                    <td class="align-middle">@item.PatientName</td>
                    <td class="align-middle">@item.Requestor</td>
                    <td class="align-middle">@item.DateOfService</td>
                    <td class="align-middle">@item.CloseDate</td>
                    <td class="align-middle">@item.Email</td>
                    <td class="align-middle">@item.PhoneNumber</td>
                    <td class="align-middle">@item.Address</td>
                    <td class="align-middle">@item.Zip</td>
                    @switch (item.RequestStatus)
                    {
                        case 1:
                            <td class="align-middle">New</td>
                            break;
                        case 2:
                            <td class="align-middle">Pending</td>
                            break;
                        case 3:
                            <td class="align-middle">To Close</td>
                            break;
                        case 4:
                            <td class="align-middle">Active</td>
                            break;
                        case 5:
                            <td class="align-middle">Active</td>
                            break;
                        case 6:
                            <td class="align-middle">Conclude</td>
                            break;
                        case 7:
                            <td class="align-middle">To Close</td>
                            break;
                        case 8:
                            <td class="align-middle">To Close</td>
                            break;
                        case 9:
                            <td class="align-middle">Unpaid</td>
                            break;
                    }
                    <td class="align-middle">@item.PhysicianName</td>
                    <td class="align-middle">@item.PhysicianNote</td>
                    <td class="align-middle">@item.CancelledByProvidor</td>
                    <td class="align-middle">@item.AdminNotes</td>
                    <td class="align-middle">@item.PatientNote</td>
                    <td class="align-middle">
                        <a asp-action="deleteRequest" asp-route-requestId="@item.RequestId" class="btn btn-outline-info">Delete</a>
                    </td>

                </tr>
            }
        </tbody>

    </Table>
    <div class="pb-2 position-absolute d-flex justify-content-between align-items-center" style="bottom: 0%; width: 95%">
        <nav id="pagination" aria-label="Page navigation">
            <ul class="pagination justify-content-center mb-0">
                @if (ViewBag.CurrentPage >= 1 && ViewBag.CurrentPage <= ViewBag.TotalPages)
                {
                    int prevpage = Convert.ToInt32(ViewBag.CurrentPage) - 1;
                    int currpage = Convert.ToInt32(ViewBag.CurrentPage);
                    int nextpage = Convert.ToInt32(ViewBag.CurrentPage) + 1;
                    <li class="page-item">
                        <a class="page-link btn rounded-4 btn-outline-info mx-1" id="previous" data-page="@(prevpage)" aria-label="Previous" @(ViewBag.CurrentPage <= 1 ? "hidden" : "")>
                            &laquo;
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link btn rounded-4 btn-outline-info mx-1" id="current" data-page="@(currpage)" aria-label="Current">
                            @(ViewBag.CurrentPage)
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link btn rounded-4 btn-outline-info mx-1" id="next" data-page="@(nextpage)" aria-label="Next" @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "hidden" : "")>
                            &raquo;
                        </a>
                    </li>
                }
            </ul>
        </nav>
        <span>@ViewBag.CurrentPage of @ViewBag.TotalPages</span>
    </div>

}

