@{
    Layout = "~/Views/Shared/_LayoutAdminDash.cshtml";
}
@model DAL.ViewModels.SchedulingVM

@* ----------------Create Shift Modal----------------- *@
<style>
    .remove-dflex{
        display: none !important;
    }
    .fc-time {
        display: none;
    }

    .fc-daygrid-event {
        cursor: pointer;
    }

    .fc-event-end .fc-event-time {
        display: none;
    }

    .fc-header-toolbar.fc-header-resources-only {
        background-color: #ff9999;
        border: none;
    }

    .fc-header-toolbar,
    .fc-daygrid-event {
        background-color: #CCCCCC !important;
        / or any other color code /
    }


    .fc-timeline-header-row {
        background-color: gray !important;
    }

    .btn22 {
        padding: 0.25rem 0.5rem !important;
    }

    .fc-header-toolbar .fc-button {
        padding: 0.25rem 0.5rem !important;
    }

    .input-group {
        width: 300px;
    }

    #calendar {
        margin-top: 2rem;
    }

    .fc .fc-toolbar-title {
        font-size: 22px;
        font-weight: 600;
    }

    .fc-scrollgrid-sync-inner:has(.fc-col-header-cell-cushion) {
        background-color: #747474;
    }

    .fc .fc-col-header-cell-cushion {
        color: white;
    }

    .fc a {
        color: black;
        cursor: pointer;
        text-decoration: none;
    }

    /* .fc-daygrid-day-top {
                background-color: #ec9aef;
            }*/

    .fc .fc-button-group {
        display: block;
    }

    .fc-button {
        margin: 10px;
    }

    .fc-direction-ltr .fc-button-group > .fc-button:not(:last-child) {
        background: none;
        border: 1px solid #02BCE6;
        color: #02BCE6;
        border-radius: 5px;
        margin: 3px;
    }

    .fc-direction-ltr .fc-button-group > .fc-button:last-child {
        background: none;
        border: 1px solid #02BCE6;
        color: #02BCE6;
        border-radius: 5px;
        margin: 3px;
    }

    .fc .fc-button-primary:not(:disabled).fc-button-active:focus, .fc .fc-button-primary:not(:disabled):active:focus {
        box-shadow: none;
    }

    .fc .fc-button-group > .fc-button.fc-button-active {
        background-color: #02BCE6;
        color: white;
    }

    .fc-toolbar-title {
        font-weight: 600;
    }

    .fc-next-button.fc-button.fc-button-primary {
        padding: 4px 5px;
        border-radius: 50px;
    }

    .fc-prev-button.fc-button.fc-button-primary {
        padding: 4px 5px;
        border-radius: 50px;
    }

    .fc-direction-ltr {
        padding: 4px 5px;
        border-radius: 50px;
    }

    .fc a {
        color: darkcyan !important;
    }

    .fc-scrollgrid-sync-inner:has(.fc-col-header-cell-cushion) {
        background-color: lightpink !important;
    }

    .fc-daygrid-event {
        background-color: transparent !important;
    }

    .fc-timeline-slot-frame{
        background-color: lightpink !important;
    }

    /*.fc-daygrid-day-top{
        background-color: lightsteelblue !important;
    }*/
</style>


<div class="modal fade" id="createShiftModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content border-0">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="exampleModalLongTitle">Add New Shift </h5>
                <button type="button" class="close btn shadow-none" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="bi bi-x-lg text-white"></i></span>
                </button>
            </div>
            <form asp-action="CreateShift" method="post" class="row p-3" id="createShiftModalForm">
                <input type="hidden" asp-for="checkWeekday" id="checkWeekday" />

                <div class="form-floating my-3">
                    <select asp-for="Regionid" class="p-2 px-3 form-control w-100 regionDropdown" onchange="filterPhysicianByRegion(this.value)" id="selectregion">
                        <option value="" selected disabled>Regions</option>
                        @foreach (var region in Model.Region)
                        {
                            <option value="@region.RegionId">@region.Name - (@region.Abbreviation)</option>
                        }
                    </select>
                </div>

                <div class="form-floating mb-3">
                    <select class="form-select pt-1 physicianDropdown" asp-for="Physicianid" id="physicianDrop" aria-label="Default select example">
                        <option value="0" selected disabled>Physician</option>
                    </select>
                </div>

                <div class="col-md-12 form-floating mb-3">
                    <input id="StartDate" asp-for="Startdate" class="form-control rounded vcs" name="Startdate" type="date"
                           min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@DateTime.Now.ToString("yyyy-MM-dd")" autocomplete=off>
                    <label for="floatingInput">Starting Date</label>
                </div>
                <div class="col-md-6 form-floating mb-3">
                    <input id="StartTime" asp-for="Starttime" class="form-control rounded vcs" name="Starttime" type="time" placeholder=Suchtext autocomplete=off >
                    <label for="floatingInput">Start</label>
                </div>
                <div class="col-md-6 form-floating mb-3">
                    <input id="EndTime" asp-for="Endtime" class="form-control rounded vcs" name="Endtime" type="time" placeholder=Suchtext autocomplete=off>
                    <label for="floatingInput">End</label>
                </div>
                <div class="col-md-6 d-flex align-items-center justify-content-start mb-3">
                    <label for="floatingInput">Repeat</label>
                    <label class="switch">
                        <input type="checkbox" asp-for="Isrepeat" id="Isrepeat" class="switch-input form-check-input mx-3" onchange="toggleCheckboxes()">
                        <span class="slider round"></span>
                    </label>
                </div>

                <label class="my-2" for="Sunday">Repeat Days</label>
                <input type="hidden" asp-for="checkWeekday" id="checkWeekday" />

                <div class="col-md-12 row form-floating">

                    <div class="col-md-4">
                        <div class="form-check mx-2 d-flex align-items-center">
                            <input onchange="menubox()" class="form-check-input Every disabled" disabled type="checkbox" name="Sunday" value="0">
                            <label class="form-check-label" for="Sunday">Every Sunday</label>
                        </div>
                    </div>

                    <div class="col-md-4 ">
                        <div class="form-check mx-2 d-flex align-items-center">
                            <input onchange="menubox()" class="form-check-input Every" disabled type="checkbox" name="Monday" value="1">
                            <label class="form-check-label" for="Monday">Every Monday</label>
                        </div>
                    </div>
                    <div class="col-md-4 ">
                        <div class="form-check mx-2 d-flex align-items-center">
                            <input onchange="menubox()" class="form-check-input Every" disabled type="checkbox" name="Tuesday" value="2">
                            <label class="form-check-label" for="Tuesday">Every Tuesday</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-check mx-2">
                            <input onchange="menubox()" class="form-check-input Every" disabled type="checkbox" name="Wednesday" value="3">
                            <label class="form-check-label" for="Wednesday">Every Wednesday</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-check mx-2 d-flex align-items-center">
                            <input onchange="menubox()" class="form-check-input Every" disabled type="checkbox" name="Thursday" value="4">
                            <label class="form-check-label" for="Thursday">Every Thursday</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-check mx-2 d-flex align-items-center">
                            <input onchange="menubox()" class="form-check-input Every" disabled type="checkbox" name="Friday" value="5">
                            <label class="form-check-label" for="Friday">Every Friday</label>
                        </div>
                    </div>
                    <div class="col-md-3 ">
                        <div class="form-check mx-2 d-flex align-items-center">
                            <input onchange="menubox()" class="form-check-input Every" disabled type="checkbox" name="Saturday" value="6">
                            <label class="form-check-label" for="Saturday">Every Saturday</label>
                        </div>
                    </div>

                </div>
                <div class="col-md-12 form-floating  my-2">
                    <select asp-for="Repeatupto" class="form-select form-select-sm mt-3 p-2" id="Refile" disabled data-allow-clear="true" tabindex="-1" data-control="select2" data-placeholder=" ">
                        <option selected hidden>Reapet End</option>
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                    </select>
                </div>
                <hr class="form-button-divider" />

                <div class="row">
                    <div class="col-12 d-flex justify-content-end">
                        <input type="button" value="Save" class="btn btn-info  shadow-none text-white mx-2" onclick="submitAddShiftForm()" />
                        <button type="button" class="btn btn-outline-info  shadow-none hover_white" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </form>
        </div>  
    </div>
</div>


<div class="justify-content-between d-flex container-fluid mb-2 position-relative container my-3">
    <div class="">
        <h3> Scheduling </h3>
    </div>
    <div>
        <a asp-action="MainPage" class="btn btn-outline-info"> ❮  Back </a>
    </div>
</div>

<div class="container bg-body py-3 px-4 mb-3 shadow ">

    <div class="p-0 m-0 d-flex justify-content-between">
        <div class="d-flex border border-secondary bg-body rounded align-items-center my-2 col-3">
            <select class="form-control shadow-none border-0" id="SelectedStateId" name="SelectedStateId" onchange="fetchPhysicianShifts(this.value)">
                <option value="0">All Region</option>
                @foreach (var state in Model.Region)
                {
                    <option value="@state.RegionId">@state.Name</option>
                }
            </select>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down me-2" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708" />
            </svg>
        </div>
        <div class="d-flex mr-0 py-2 justify-content-end">
            <a asp-action="ProviderOnCall" class="btn btn-info text-white mx-2 shadow-none" id="providerBtn" style="width:fit-content">
                <span>Providers On Call</span>
            </a>
            <a asp-action="requestedShifts" class="btn btn-info text-white mx-2 shadow-none" id="adminBtn" style="width:fit-content">
                <span>Shift for review</span>
            </a>
            <button class="btn btn-info text-white mx-2 shadow-none" id="adminBtn" style="width:fit-content" data-bs-toggle="modal" data-bs-target="#createShiftModal">
                <span>Add New Shift</span>
            </button>
        </div>
    </div>


    <h4 class="w-100 my-0 py-3" id="dateOfShift"></h4>


    <div class="m-0 pe-2 py-0 d-flex justify-content-end my-3">
        <div class="alert mx-1 px-4 border border-danger shadow" role="alert" style="background-color:#e39ce8">
        </div>
        <span class="mx-1">Pending Shifts</span>
        <!-- Button trigger modal -->
        <div class="alert mx-1 px-4 border border-success shadow" role="alert" style="background-color: #31d87c">
        </div>
        <span class="mx-1">Appoved Shifts</span>
    </div>
    <div class="my-3 p-0 d-flex justify-content-between">
        <div>
            <button type="button" class="rounded-5 btn btn-info text-white me-3 shadow-none" onclick="calendar.prev()">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-caret-left-fill" viewBox="0 0 16 16">
                    <path d="m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z" />
                </svg>
            </button>
            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-calendar" viewBox="0 0 16 16">
                <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z" />
            </svg>
            <button type="button" class="rounded-5 btn btn-info text-white ms-3 shadow-none" onclick="calendar.next()">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                    <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z" />
                </svg>
            </button>
        </div>
        <div>
            <button id="day" class="btn btn-outline-info shadow-none mx-2" onclick="calendar.changeView('resourceTimeline')">
                Day
            </button>
            <!-- Button trigger modal -->
            <button id="week" class="btn btn-outline-info mx-2 shadow-none" onclick="calendar.changeView('resourceTimelineWeek')">
                Week
            </button>
            <button id="month" class="btn btn-outline-info mx-2 shadow-none" onclick="calendar.changeView('dayGridMonth')">
                Month
            </button>
        </div>
    </div>
        <div id="calendar" class="bottom-0" style="height: 100vh !important"></div>
    <div id="calendar-container" class="fs-4 d-flex justify-content-center text-body"></div>
</div>

<script src="https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@6.1.11/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
<script>
    if ('@TempData["Message"]' != '') {
        showToast('@TempData["Message"]', '@TempData["MessageType"]');
        '@TempData.Remove("Message")'
    }
    function showToast(message, messageType) {
        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            }
        });

        let icon = "info";
        if (messageType === "success") {
            icon = "success";
        } else if (messageType === "error") {
            icon = "error";
        } else if (messageType === "warning") {
            icon = "warning";
        }

        Toast.fire({
            icon: icon,
            title: message
        });
    }
</script>
<script>
    function menubox() {
        event.preventDefault();
        let checkboxes = document.querySelectorAll('.Every:checked');
        let repeatDays = [];
        checkboxes.forEach(checkbox => {
            repeatDays.push(checkbox.value);
        });
        document.querySelector('#checkWeekday').value = repeatDays.join(',');
        console.log(document.querySelector('#checkWeekday').value);
    };

    function submitAddShiftForm() {

        var regionId = $("#selectregion").val();
        var starttime = $("#StartTime").val();
        var endtime = $("#EndTime").val();
        var endtime = $("#EndTime").val();
        console.log(regionId);
        if (regionId == null) {
            alert("Please Select the reqion");
        }
        else if (endtime - starttime < 1) {
            alert("endtime should be greater than starttime");
        }
        else {
            $("#createShiftModalForm").submit();
        }
    }
</script>
<script>


    // Define functions to navigate the calendar and change the view
    let calendarNext = () => calendar.next();
    let calendarPrev = () => calendar.prev();
    let calendarToday = () => calendar.today();
    let changeView = (type) => calendar.changeView(type);

    fetchPhysicianShifts("0");

    function fetchPhysicianShifts(region) {
        // Fetch physician shifts data
        fetch(`/AdminDashboard/GetPhysicianShift?region=${region}`)
            .then(response => response.json())
            .then(data => { 
                if(data.message){
                    $("#calendar-container").removeClass("remove-dflex").html("<p>" + data.message + "</p>");
                    $("#calendar").css('display','none');
                }else{
                    $("#calendar").css('display', 'block');
                    $("#calendar-container.d-flex").addClass("remove-dflex");

                    const resources = data.map(physician => ({
                        id: physician.physicianId,
                        title: physician.firstName,
                    }));
                    fetch(`/AdminDashboard/getEvents?regionId=${region}`)
                        .then(response => response.json())
                        .then(data => {
                            const events = data.map(event => ({
                                id: event.shiftDetailId,
                                resourceId: event.physicianid,
                                title: event.title,
                                start: event.startdate,
                                end: event.enddate,
                                eventBackgroundColor: event.status === 1 ? '#32d97d' : '#e39de8',
                                color: event.status === 1 ? '#e39de8' : '#32d97d',
                                ShiftDetailId: event.shiftDetailId,
                                region: event.region,
                                status: event.status,
                                allDay: false,
                            }));

                            var calendarEl = document.getElementById('calendar');
                            calendar = new FullCalendar.Calendar(calendarEl, {
                                height: 'auto',
                                schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
                                themeSystem: 'bootstrap5',
                                headerToolbar: false,
                                initialView: 'resourceTimeline',
                                resourceAreaWidth: '15%',
                                resources: resources,
                                events: events,
                                //editable: true,
                                eventClick: function (info) {

                                    $('#eventModal').modal('show');

                                    $('#eventModal').on('click', '#editbtn', function () {
                                        $('#editbtn').addClass('d-none');
                                        $('#savebtn').removeClass('d-none');
                                        $('#StartDateView').prop('disabled', false);
                                        $('#StartTimeView').prop('disabled', false);
                                        $('#EndTimeView').prop('disabled', false);
                                    });

                                    $('#eventModal').on('click', '#returnshift', function () {
                                        console.log("sdfs")

                                        var shiftDetailId = $('#shiftDetailId').val(); // Assuming you have an input field with id 'shiftDetailId' in your modal
                                        $.ajax({
                                            url: '/AdminDashboard/changeShiftStatus',
                                            type: 'POST',
                                            data: { shiftDetailId: shiftDetailId, region: region },
                                            success: function (response) {
                                                // Handle success
                                                $('#eventModal').modal('hide');
                                                const events = response.events.map(event => ({
                                                    id: event.shiftDetailId,
                                                    resourceId: event.physicianid,
                                                    title: event.title,
                                                    start: event.startdate,
                                                    end: event.enddate,
                                                    eventBackgroundColor: event.status === 1 ? '#32d97d' : '#e39de8',
                                                    color: event.status === 1 ? '#e39de8' : '#32d97d',
                                                    ShiftDetailId: event.shiftDetailId,
                                                    region: event.region
                                                }));
                                                calendar.removeAllEvents();
                                                calendar.addEventSource(events);
                                                calendar.refetchEvents();

                                            },
                                            error: function (xhr, status, error) {
                                            }
                                        });
                                    });

                                    $('#eventModal').on('click', '#deletebtn', function () {
                                        var shiftDetailId = $('#shiftDetailId').val();
                                        $.ajax({
                                            url: '/AdminDashboard/DeleteShift',
                                            type: 'POST',
                                            data: { shiftDetailId: shiftDetailId, region: region },
                                            success: function (response) {
                                                $('#eventModal').modal('hide');
                                                const events = response.events.map(event => ({
                                                    id: event.shiftDetailId,
                                                    resourceId: event.physicianid,
                                                    title: event.title,
                                                    start: event.startdate,
                                                    end: event.enddate,
                                                    eventBackgroundColor: event.status === 1 ? '#32d97d' : '#e39de8',
                                                    color: event.status === 1 ? '#e39de8' : '#32d97d',
                                                    ShiftDetailId: event.shiftDetailId,
                                                    region: event.region
                                                }));
                                                calendar.removeAllEvents();
                                                calendar.addEventSource(events);
                                                calendar.refetchEvents();
                                            },
                                            error: function (xhr, status, error) {
                                            }
                                        });
                                    });

                                    $('#eventModal').on('click', '#savebtn', function () {
                                        // Get data to be saved
                                        var shiftDetailId = $('#shiftDetailId').val(); // Assuming you have an input field with id 'shiftDetailId' in your modal
                                        var startDate = $('#StartDateView').val();
                                        var startTime = $('#StartTimeView').val();
                                        var endTime = $('#EndTimeView').val();
                                        console.log(shiftDetailId);
                                        $.ajax({
                                            url: '/AdminDashboard/saveShiftChanges',
                                            type: 'POST',
                                            data: {
                                                shiftDetailId: shiftDetailId,
                                                startDate: startDate,
                                                startTime: startTime,
                                                endTime: endTime,
                                                region: region,
                                            },
                                            success: function (response) {
                                                $('#eventModal').modal('hide');

                                                const events = response.events.map(event => ({
                                                    id: event.shiftDetailId,
                                                    resourceId: event.physicianid,
                                                    title: event.title,
                                                    start: event.startdate,
                                                    end: event.enddate,
                                                    eventBackgroundColor: event.status === 1 ? '#32d97d' : '#e39de8',
                                                    color: event.status === 1 ? '#e39de8' : '#32d97d',
                                                    ShiftDetailId: event.shiftDetailId,
                                                    region: event.region
                                                }));
                                                calendar.removeAllEvents(); // Remove existing events
                                                calendar.addEventSource(events); // Add updated events
                                                calendar.refetchEvents(); // Refetch events from the event sources

                                                // Hide the save button and show the edit button
                                                $('#savebtn').addClass('d-none');
                                                $('#editbtn').removeClass('d-none');
                                            },
                                            error: function (xhr, status, error) {
                                                // Handle error
                                            }
                                        });
                                    });
                                    // Get the ShiftDetailId from the event's extendedProps
                                    var shiftDetailId = info.event.extendedProps.ShiftDetailId;
                                    var region = info.event.extendedProps.region;
                                    console.log(region)
                                    // Populate modal content with event details
                                    var event = info.event;
                                    var modalBody = document.querySelector('#eventModal .modal-body');
                                    var eventDetails = `
                                            <form asp-action="viewshift">
                                            <input class="d-none" id="shiftDetailId" value="${shiftDetailId}">

                                            <div class="form-floating mb-3 mt-3">
                                                            <select class="form-select pt-1 physicianDropdown" asp-for="Physicianid" id="physicianSelect" aria-label="Default select example" disabled>
                                                            <option value="" selected disabled>${event.title}</option>
                                                        </select>
                                                    </div>
                                                            <div class="col-md-12 form-floating mb-3">
                                            <input id="StartDateView" class="form-control rounded vcs" name="Startdate" type="date" placeholder="Suchtext" autocomplete="off" value="${formatDate(event.start)}" disabled>
                                                        <label for="StartDate">Shifted Date</label>
                                                        <div class="d-flex gap-2 mt-3">
                                                        <div class="col-md-6 form-floating mb-3">
                                                                <input id="StartTimeView" asp-for="Starttime" disabled class="form-control rounded vcs" name="Starttime" type="time" placeholder="Suchtext" autocomplete="off" value="${formatTime(event.start)}" >
                                                        <label for="StartTime">Start</label>
                                                    </div>
                                                    <div class="col-md-6 form-floating mb-3">
                                                                <input id="EndTimeView" asp-for="Endtime" disabled	 class="form-control rounded vcs" name="Endtime" type="time" placeholder="Suchtext" autocomplete="off" value="${formatTime(event.end)}" >
                                                        <label for="EndTime">End</label>
                                                    </div>
                                                    </div>
                                                        <div class="d-flex justify-content-end gap-2">
                                                    <button class="btn btn-info" id="returnshift"  type="button">Return</button>
                                                <button class="btn btn-info" id="editbtn" type="button">Edit</button>
                                                    <button class="btn btn-success d-none" id="savebtn"  type="button">Save</button>
                                                <button class="btn btn-danger" id="deletebtn" type="button">Delete</button>
                                            </div>
                                                    </form>
                                                `;
                                    modalBody.innerHTML = eventDetails;
                                },
                                eventDragStop: function (info) {
                                    $('#eventModal').modal('show');
                                },
                                datesSet: function (info) {
                                    var title = info.view.title;
                                    $("#dateOfShift").html(title);
                                },
                                resourceLabelDidMount: function (resourceObj) {
                                    const img = document.createElement('img');
                                    const imgUrl = resourceObj.resource.extendedProps.imageUrl || `/Physician/${resourceObj.el.dataset.resourceId}/profile.png`;
                                    img.src = imgUrl;
                                    console.log(imgUrl);
                                    img.style.maxHeight = '25px';
                                    img.style.marginLeft = "4px";
                                    resourceObj.el.querySelector('.fc-datagrid-cell-main').appendChild(img);
                                },
                                views: {
                                    resourceTimelineDay: {
                                        buttonText: 'Day',
                                    },
                                    resourceTimelineWeek: {
                                        buttonText: 'Week',
                                        slotDuration: { days: 1 },
                                        slotLabelInterval: { days: 1 },
                                        slotMinTime: '00:00:00',
                                        slotMaxTime: '23:59:59',
                                        slotLabelFormat: {
                                            omitWeekday: false,
                                            weekday: 'short',
                                            day: '2-digit',
                                            omitCommas: true,
                                            meridiem: 'short'
                                        }
                                    },
                                    resourceTimelineMonth: {
                                        buttonText: 'Month',
                                        eventLimit: true, // Set the event limit to 3
                                        eventLimitText: "More"
                                    }
                                },


                                // ... other calendar options ...
                            });

                            calendar.render();

                        });
                }
                // Create an array of resources using the physician data
                
            });
    }

    function filterPhysicianByRegion(RegionId) {
        if (RegionId != "0") {
            $.ajax({
                type: "GET",
                url: "/AdminDashboard/filterPhyByRegion",
                data: { RegionId: RegionId },

                success: function (data) {
                    $('#physicianDrop').empty();
                    $.each(data, function (index, item) {

                        $('#physicianDrop').append($('<option>').text(item.firstName).attr('value', item.physicianId));
                    });
                    $('#physicianDrop option:first').prop('selected', true);
                }
            });
        }
    }

    window.onload = toggleCheckboxes;
    function toggleCheckboxes() {
        var repeatCheckbox = document.getElementById('Isrepeat');
        var refile = document.getElementById('Refile');
        var checkboxes = document.querySelectorAll('.Every');

        if (!repeatCheckbox.checked) {
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = false;
                checkbox.disabled = true;
                refile.disabled = true;
            });
        } else {
            checkboxes.forEach(function (checkbox) {
                checkbox.disabled = false;
                refile.disabled = false;
            });
        }
    }



    $("#day").click(function () {
        calendar.changeView('resourceTimelineDay');
        localStorage.setItem("calendarView", "resourceTimelineDay");

    });

    $("#week").click(function () {
        calendar.changeView('resourceTimelineWeek');
        localStorage.setItem("calendarView", "resourceTimelineWeek");

    });

    $("#month").click(function () {
        calendar.changeView('dayGridMonth');
        localStorage.setItem("calendarView", "dayGridMonth");

    });
</script>

<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-info">
                <h5 class="modal-title" id="eventModalLabel">View Shift</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>

        </div>
    </div>
</div>
<script>
    // Function to format date to YYYY-MM-DD
    function formatDate(dateString) {
        const date = new Date(dateString);
        const year = date.getFullYear();
        let month = (date.getMonth() + 1).toString().padStart(2, '0');
        let day = date.getDate().toString().padStart(2, '0');
        return `${year}-${month}-${day}`;
    }
</script>
<script>
    // Function to format time to HH:mm
    function formatTime(dateString) {
        const date = new Date(dateString);
        let hours = date.getHours().toString().padStart(2, '0');
        let minutes = date.getMinutes().toString().padStart(2, '0');
        return `${hours}:${minutes}`;
    }
    const currentTime = new Date();
    const hours = currentTime.getHours();
    const minutes = currentTime.getMinutes();
    document.getElementById('StartTime').min = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;
</script>